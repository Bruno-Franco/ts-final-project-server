// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  firstName  String
  lastName   String?
  email      String   @unique
  phone      Int?
  isAdmin    Boolean  @default(false)
  isEmployee Boolean? @default(false)

  password    String
  avatar      String?
  address     String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  bikes       Bike[]
  Apointments Apointments[]
}

model Bike {
  id          String        @id @default(cuid())
  plate       String?       @unique
  model       String?
  family      String?
  vin         String?       @unique
  userId      String?
  user        User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  apointments Apointments[]
}

model Apointments {
  id            String    @id @default(cuid())
  bikeId        String?
  bike          Bike?     @relation(fields: [bikeId], references: [id], onDelete: Cascade)
  userId        String?
  user          User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  preferredDate DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
